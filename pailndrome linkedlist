/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid=middle(head);
        ListNode headsecond=reverse(mid);
        ListNode reversehead=headsecond;
        //compare both halves;
        while(head!=null&&headsecond!=null){
            if(head.val!=headsecond.val){
                break;
            }
            head=head.next;
            headsecond=headsecond.next;
        }

        reverse(reversehead);
                return head==null||headsecond==null;

        }
    
    public ListNode middle(ListNode head){
        ListNode f=head;
         ListNode s=head;
         while(f!=null&&f.next!=null){
          //   f=f.next.next;
             s=s.next;
             f=f.next.next;
         }
         return s;
    }
    public ListNode reverse(ListNode head){
        if(head==null){
            return head;
        }
       
        ListNode prev=null;
         ListNode pres=head;
        ListNode next=pres.next;
        while(pres!=null){
            pres.next=prev;
            prev=pres;
            pres=next;
            if(next!=null){
            next=next.next;
            }
        }
        return prev;
    }
}
